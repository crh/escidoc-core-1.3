<?xml version="1.0" encoding="<XDtConfig:configParameterValue paramName='Xmlencoding'/>"?>

<beans
xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:aop="http://www.springframework.org/schema/aop"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:jee="http://www.springframework.org/schema/jee"
      xmlns:jms="http://www.springframework.org/schema/jms"
      xmlns:lang="http://www.springframework.org/schema/lang"
      xmlns:security="http://www.springframework.org/schema/security"
      xmlns:tx="http://www.springframework.org/schema/tx"
      xmlns:util="http://www.springframework.org/schema/util"
      xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xs
http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"

  default-autowire="<XDtConfig:configParameterValue paramName="defaultAutowire"/>"
  default-lazy-init="<XDtConfig:configParameterValue paramName="defaultLazyInit"/>"  
>

<XDtClass:forAllClasses>

<XDtCollection:create name="hasTransactionalBehaviour" />
<XDtClass:ifHasClassTag  tagName="spring:bean" >
	<XDtClass:ifHasClassTag  tagName="tx" >
  		<XDtCollection:put name="hasTransactionalBehaviour" value="true" />
	</XDtClass:ifHasClassTag>
	<XDtMethod:forAllMethods>
		<XDtMethod:ifHasMethodTag tagName="tx">
  			<XDtCollection:put name="hasTransactionalBehaviour" value="true" />
		</XDtMethod:ifHasMethodTag>
	</XDtMethod:forAllMethods>
	<XDtCollection:ifContains name="hasTransactionalBehaviour" value="true">
		<aop:config>
		<XDtClass:ifHasClassTag  tagName="tx" >
    		<aop:pointcut id="<XDtClass:classTagValue tagName="spring.bean" paramName="id"/>.TransactionPointcut" expression="execution(* <XDtClass:fullClassName/>.*(..))"/>
		</XDtClass:ifHasClassTag>
		<XDtMethod:forAllMethods>
			<XDtMethod:ifHasMethodTag tagName="tx">
    		<aop:pointcut id="<XDtClass:classTagValue tagName="spring.bean" paramName="id"/>.<XDtMethod:methodName/>.TransactionPointcut" expression="execution(* <XDtClass:fullClassName/>.<XDtMethod:methodName/>(..))"/>
			</XDtMethod:ifHasMethodTag>
		</XDtMethod:forAllMethods>
		<XDtClass:ifHasClassTag  tagName="tx" >
    		<aop:advisor advice-ref="escidoc-core.txAdvice" pointcut-ref="<XDtClass:classTagValue tagName="spring.bean" paramName="id"/>.TransactionPointcut"/>
		</XDtClass:ifHasClassTag>
		<XDtMethod:forAllMethods>
			<XDtMethod:ifHasMethodTag tagName="tx">
    		<aop:advisor advice-ref="escidoc-core.txAdvice" pointcut-ref="<XDtClass:classTagValue tagName="spring.bean" paramName="id"/>.<XDtMethod:methodName/>.TransactionPointcut"/>
			</XDtMethod:ifHasMethodTag>
		</XDtMethod:forAllMethods>
		</aop:config>
	</XDtCollection:ifContains>
</XDtClass:ifHasClassTag>
<XDtCollection:destroy name="hasTransactionalBehaviour" />


<XDtClass:forAllClassTags tagName="spring:bean">

	  <bean
    <XDtClass:ifHasClassTag tagName="spring.bean" paramName="id"> id="<XDtClass:classTagValue tagName="spring.bean" paramName="id"/>"</XDtClass:ifHasClassTag>
    <XDtClass:ifHasClassTag tagName="spring.bean" paramName="name">name="<XDtClass:classTagValue tagName="spring.bean" paramName="name"/>"</XDtClass:ifHasClassTag>
	      class="<XDtClass:fullClassName/>"
	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="factory-method">
	      factory-method="<XDtClass:classTagValue tagName="spring:bean" paramName="factory-method" values="aspectOf"/>"
	  </XDtClass:ifHasClassTag>
	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="autowire">
	      autowire="<XDtClass:classTagValue tagName="spring:bean" paramName="autowire" values="no,byName,byType,constructor,auto-detect"/>"
	  </XDtClass:ifHasClassTag>
	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="init-method">
	      init-method="<XDtClass:classTagValue tagName="spring.bean" paramName="init-method"/>"
	  </XDtClass:ifHasClassTag>
	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="destroy-method">
	      destroy-method="<XDtClass:classTagValue tagName="spring:bean" paramName="destroy-method"/>"
	  </XDtClass:ifHasClassTag>
	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="dependency-check">
	      dependency-check="<XDtClass:classTagValue tagName="spring:bean" paramName="dependency-check" values="all,objects,simple"/>"
	  </XDtClass:ifHasClassTag>
	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="singleton">
	      singleton="<XDtClass:classTagValue tagName="spring:bean" paramName="singleton" values="true,false" default="true"/>"
	  </XDtClass:ifHasClassTag>
	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="scope">
          scope="<XDtClass:classTagValue tagName="spring:bean" paramName="scope" values="singleton,prototype,request,session,globalSession" default="singleton"/>"
      </XDtClass:ifHasClassTag>
	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="lazy-init">
	      lazy-init="<XDtClass:classTagValue tagName="spring:bean" paramName="lazy-init" values="true,false,default" default="default"/>"
	  </XDtClass:ifHasClassTag>
	  >

	  <XDtClass:ifHasClassTag tagName="spring.bean" paramName="description">
	    <description><XDtClass:classTagValue tagName="spring.bean" paramName="description"/></description>
	  </XDtClass:ifHasClassTag>

	  <XDtConstructor:forAllConstructors>
	    <XDtConstructor:forAllConstructorTags tagName="spring.constructor-arg">
	    <constructor-arg>
	    <XDtConstructor:ifHasConstructorTag tagName="spring.constructor-arg" paramName="value">
	      <value><XDtConstructor:constructorTagValue tagName="spring.constructor-arg" paramName="value"/></value>
	    </XDtConstructor:ifHasConstructorTag>
	    <XDtConstructor:ifHasConstructorTag tagName="spring.constructor-arg" paramName="ref">
	      <ref bean="<XDtConstructor:constructorTagValue tagName="spring.constructor-arg" paramName="ref"/>"/>
	    </XDtConstructor:ifHasConstructorTag>
	    <XDtConstructor:ifHasConstructorTag tagName="spring.constructor-arg" paramName="list">
	      <list>
	      <XDtConstructor:forAllConstructorTagTokens tagName="spring.constructor-arg" paramName="list">
	        <value><XDtConstructor:currentToken/></value>
	      </XDtConstructor:forAllConstructorTagTokens>
	      </list>
	    </XDtConstructor:ifHasConstructorTag>
	    </constructor-arg>
	    </XDtConstructor:forAllConstructorTags>
	  </XDtConstructor:forAllConstructors>

	  <XDtMethod:forAllMethods superclasses="true">
	   <XDtMethod:ifHasMethodTag tagName="spring.property">
	    <property name="<XDtMethod:propertyName/>">

	    <XDtMethod:ifHasMethodTag tagName="spring.property" paramName="value">
	      <value><XDtMethod:methodTagValue tagName="spring.property" paramName="value"/></value>
	    </XDtMethod:ifHasMethodTag>
	    <XDtMethod:ifHasMethodTag tagName="spring.property" paramName="ref">
	      <ref bean="<XDtMethod:methodTagValue tagName="spring.property" paramName="ref"/>"/>
	    </XDtMethod:ifHasMethodTag>
	    <XDtMethod:ifHasMethodTag tagName="spring.property" paramName="list">
	      <list>
	      <XDtMethod:forAllMethodTagTokens tagName="spring.property" paramName="list">
	        <value><XDtMethod:currentToken/></value>
	      </XDtMethod:forAllMethodTagTokens>
	      </list>
	    </XDtMethod:ifHasMethodTag>
	    </property>
	   </XDtMethod:ifHasMethodTag>
	  </XDtMethod:forAllMethods>

	  <XDtClass:forAllClassTags tagName="spring.property">
	    <property name="<XDtClass:classTagValue tagName="spring.property" paramName="name"/>">
	    <XDtClass:ifHasClassTag tagName="spring.property" paramName="value">
	      <value><XDtClass:classTagValue tagName="spring.property" paramName="value"/></value>
	    </XDtClass:ifHasClassTag>
	    <XDtClass:ifHasClassTag tagName="spring.property" paramName="ref">
	      <ref bean="<XDtClass:classTagValue tagName="spring.property" paramName="ref"/>"/>
	    </XDtClass:ifHasClassTag>
	        <XDtClass:ifHasClassTag tagName="spring.property" paramName="list">
	      <list>
	      <XDtClass:forAllClassTagTokens tagName="spring.property" paramName="list">
	        <value><XDtClass:currentToken/></value>
	      </XDtClass:forAllClassTagTokens>
	      </list>
	    </XDtClass:ifHasClassTag>
	    </property>
	  </XDtClass:forAllClassTags>
	  </bean>
</XDtClass:forAllClassTags>
</XDtClass:forAllClasses>

<XDtMerge:merge file="spring-beans.xml">
  <XDtComment:comment>
     To include additional bean definitions for Spring in the generated
     application context file, add a file to your XDoclet merge directory
     called spring-beans.xml that contains the <bean></bean> markup.
  </XDtComment:comment>
</XDtMerge:merge>

</beans>
