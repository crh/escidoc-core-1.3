<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ CDDL HEADER START
  ~
  ~ The contents of this file are subject to the terms of the Common Development and Distribution License, Version 1.0
  ~ only (the "License"). You may not use this file except in compliance with the License.
  ~
  ~ You can obtain a copy of the license at license/ESCIDOC.LICENSE or http://www.escidoc.de/license. See the License for
  ~ the specific language governing permissions and limitations under the License.
  ~
  ~ When distributing Covered Code, include this CDDL HEADER in each file and include the License file at
  ~ license/ESCIDOC.LICENSE. If applicable, add the following below this CDDL HEADER, with the fields enclosed by
  ~ brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
  ~
  ~ CDDL HEADER END
  ~
  ~ Copyright 2006-2011 Fachinformationszentrum Karlsruhe Gesellschaft fuer wissenschaftlich-technische Information mbH
  ~ and Max-Planck-Gesellschaft zur Foerderung der Wissenschaft e.V. All rights reserved. Use is subject to license
  ~ terms.
  -->

  <section>
    <title>Application Programming Interfaces</title>

      <para>Most services of the eSciDoc Infrastructure offer two application
      programming interfaces (API): one is based on SOAP (once 'Simple Object
      Access Protocol'), the other one on the concept of Representational
      State Transfer (REST). Both are web-service protocols, which allow you
      invoking methods of services remotely in a language-independent manner.
      In the case of REST, you work with resources and a restricted set of 
      verbs (e.g., the verbs defined by HTTP), in SOAP, you have a more
      elaborate set of methods.</para>
      <para>
      Based on the API you select for interacting with the eSciDoc Object
      Manager, the representation of resources will slightly differ. You may
      mix method invocations using both APIs in your code, but you should be
      aware of the subtle differences of the representations (especially
      regarding the identification of resources). Retrieving a resource via
      one API and updating it via the other API will usually require
      reformatting the representation.</para>

      <para>Choosing between SOAP and REST API is mainly a matter of taste.
      Java programmers will often prefer the SOAP interface. Users of
      scripting languages typically tend to the REST API. Recently, REST-style
      interfaces gained a lot of interest because of various Web 2.0 services
      (e.g., Yahoo, Google, Facebook) offering REST APIs.</para>

      <para>A third option is the Java Interface Connector, which is targeted at
      Java developers. This connector hides the networking layer between
      eSciDoc Infrastructure and the application completely and provides a
      true object-oriented programming interface. The Java Interface Connector is
      not part of the eSciDoc Infrastructure and may be downloaded separately
      from the eSciDoc website (http://www.escidoc.org/). It comes with its
      own documentation and is thus not covered in this document.</para>
    </section>

