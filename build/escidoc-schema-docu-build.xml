<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ CDDL HEADER START
  ~
  ~ The contents of this file are subject to the terms of the Common Development and Distribution License, Version 1.0
  ~ only (the "License"). You may not use this file except in compliance with the License.
  ~
  ~ You can obtain a copy of the license at license/ESCIDOC.LICENSE or http://www.escidoc.de/license. See the License
  ~ for the specific language governing permissions and limitations under the License.
  ~
  ~ When distributing Covered Code, include this CDDL HEADER in each file and include the License file at
  ~ license/ESCIDOC.LICENSE. If applicable, add the following below this CDDL HEADER, with the fields enclosed by
  ~ brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
  ~
  ~ CDDL HEADER END
  ~
  ~ Copyright 2006-2011 Fachinformationszentrum Karlsruhe Gesellschaft fuer wissenschaftlich-technische Information mbH
  ~ and Max-Planck-Gesellschaft zur Foerderung der Wissenschaft e.V. All rights reserved. Use is subject to license
  ~ terms.
  -->

<project name="eSciDoc Schema Documentation Build" default="build" basedir="..">

	<property name="xslt.schemas.src.dir" value="escidoc-core.ear/escidoc-core.war/xsd" />	
	<property name="xslt.item.schemas.src.dir" value="${xslt.schemas.src.dir}/item/0.1" />
	<property name="xslt.schemas.docu.build.dir" value="dist/xsd/docu" />

	<target name="build" depends="clean, prepare, item-schema-documentation" />
		
	<target name="item-schema-documentation" depends="clean, prepare">	
		<antcall target="xslt-transformation">
			<param name="input-filename" value="${xslt.item.schemas.src.dir}/item.xsd" />
			<param name="output-filename" value="${xslt.schemas.docu.build.dir}/ItemXsd.xml" />	
			<param name="xslt.stylesheet" value="escidoc-core.ear/escidoc-core.war/xsl/createItemDocbook.xsl" />
			<param name="extension" value=".xsd" />
		</antcall>
	</target>

	
	
	<target name="clean">
		<delete dir="${xslt.schemas.docu.build.dir}" failonerror="false" />
	</target>

	<target name="prepare">
		<mkdir dir="${xslt.schemas.docu.build.dir}" />
	</target>

	<target name="xslt-transformation">
		<xslt in="${input-filename}" 
			  out="${output-filename}" 
			  
			  extension="${extension}" 
			  style="${xslt.stylesheet}" 
			  force="true">
			<classpath location="lib/saxon8.jar" />
		</xslt>
	</target>
</project>




