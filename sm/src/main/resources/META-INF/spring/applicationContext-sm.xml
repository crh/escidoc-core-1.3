<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xs
http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-autowire="no" default-lazy-init="true">
    <bean id="persistence.SmScopesDao" class="de.escidoc.core.sm.business.persistence.hibernate.SmScopesHibernateDao">
        <property name="mySessionFactory">
            <ref bean="sm.SessionFactory"/>
        </property>
    </bean>
    <bean id="business.StatisticDataHandler" class="de.escidoc.core.sm.business.StatisticDataHandler">
        <property name="dao" ref="persistence.SmStatisticDataDao"/>
        <property name="xmlUtility" ref="business.sm.XmlUtility"/>
        <property name="camelContext" ref="statisticServiceSpecCamelContext"/>
    </bean>
    <bean id="persistence.SmStatisticDataDao"
          class="de.escidoc.core.sm.business.persistence.hibernate.SmStatisticDataHibernateDao">
        <property name="mySessionFactory">
            <ref bean="sm.SessionFactory"/>
        </property>
    </bean>
    <bean id="eSciDoc.core.aa.business.renderer.VelocityXmlReportRenderer"
          class="de.escidoc.core.sm.business.renderer.VelocityXmlReportRenderer"></bean>
    <bean id="business.PreprocessingHandler" class="de.escidoc.core.sm.business.PreprocessingHandler" scope="prototype">
        <property name="preprocessor">
            <ref bean="business.StatisticPreprocessor"/>
        </property>
    </bean>
    <bean id="business.sm.FilterUtility" class="de.escidoc.core.sm.business.SmFilterUtility"></bean>
    <bean id="business.sm.XmlUtility" class="de.escidoc.core.sm.business.SmXmlUtility"></bean>
    <bean id="business.StatisticPreprocessor" class="de.escidoc.core.sm.business.preprocessing.StatisticPreprocessor"
          scope="prototype">
        <property name="dao">
            <ref bean="persistence.SmAggregationDefinitionsDao"/>
        </property>
        <property name="scopesDao">
            <ref bean="persistence.SmScopesDao"/>
        </property>
        <property name="statisticDataDao">
            <ref bean="persistence.SmStatisticDataDao"/>
        </property>
        <property name="preprocessingLogsDao">
            <ref bean="persistence.SmPreprocessingLogsDao"/>
        </property>
        <property name="directDatabaseAccessor">
            <ref bean="sm.persistence.DirectDatabaseAccessor"/>
        </property>
        <property name="aggregationPreprocessor">
            <ref bean="business.AggregationPreprocessor"/>
        </property>
        <property name="errorMessageHandler">
            <ref bean="common.ErrorMessageHandler"/>
        </property>
    </bean>
    <bean id="service.ScopeHandler" class="de.escidoc.core.sm.service.ScopeHandler" scope="prototype">
        <property name="scopeHandler">
            <ref bean="business.ScopeHandler"/>
        </property>
    </bean>
    <bean id="service.ReportDefinitionHandler" class="de.escidoc.core.sm.service.ReportDefinitionHandler"
          scope="prototype">
        <property name="reportDefinitionHandler">
            <ref bean="business.ReportDefinitionHandler"/>
        </property>
    </bean>
	<bean id="service.StatisticDataHandler" class="de.escidoc.core.sm.service.StatisticDataHandler"
          scope="prototype">
	    <property name="statisticDataHandler">
	      <ref bean="business.StatisticDataHandler"/>
	    </property>

	</bean>

    <bean id="mbean.StatisticErrorProcessorService"
          class="de.escidoc.core.sm.mbean.SpringStatisticErrorProcessorService">
        <property name="processor">
            <ref bean="business.ErrorQueueProcessor"/>
        </property>
    </bean>
    <bean id="eSciDoc.core.aa.business.renderer.VelocityXmlReportDefinitionRenderer"
          class="de.escidoc.core.sm.business.renderer.VelocityXmlReportDefinitionRenderer"></bean>
    <bean id="business.ReportDefinitionHandler" class="de.escidoc.core.sm.business.ReportDefinitionHandler"
          scope="prototype">
        <property name="dao">
            <ref bean="persistence.SmReportDefinitionsDao"/>
        </property>
        <property name="xmlUtility">
            <ref bean="business.sm.XmlUtility"/>
        </property>
        <property name="scopesDao">
            <ref bean="persistence.SmScopesDao"/>
        </property>
        <property name="aggregationDefinitionsDao">
            <ref bean="persistence.SmAggregationDefinitionsDao"/>
        </property>
        <property name="directDatabaseAccessor">
            <ref bean="sm.persistence.DirectDatabaseAccessor"/>
        </property>
        <property name="filterUtility">
            <ref bean="business.sm.FilterUtility"/>
        </property>
        <property name="renderer">
            <ref bean="eSciDoc.core.aa.business.renderer.VelocityXmlReportDefinitionRenderer"/>
        </property>
    </bean>
    <bean id="eSciDoc.core.aa.business.renderer.VelocityXmlAggregationDefinitionRenderer"
          class="de.escidoc.core.sm.business.renderer.VelocityXmlAggregationDefinitionRenderer"></bean>
    <bean id="persistence.SmReportDefinitionsDao"
          class="de.escidoc.core.sm.business.persistence.hibernate.SmReportDefinitionsHibernateDao">
        <property name="mySessionFactory">
            <ref bean="sm.SessionFactory"/>
        </property>
    </bean>
    <aop:config>
        <aop:pointcut id="business.AggregationPreprocessor.persistAggregation.TransactionPointcut"
                      expression="execution(* de.escidoc.core.sm.business.preprocessing.AggregationPreprocessor.persistAggregation(..))"/>
        <aop:advisor advice-ref="escidoc-core.txAdvice"
                     pointcut-ref="business.AggregationPreprocessor.persistAggregation.TransactionPointcut"/>
    </aop:config>
    <bean id="business.AggregationPreprocessor"
          class="de.escidoc.core.sm.business.preprocessing.AggregationPreprocessor" scope="prototype">
        <property name="directDatabaseAccessor">
            <ref bean="sm.persistence.DirectDatabaseAccessor"/>
        </property>
        <property name="preprocessingLogsDao">
            <ref bean="persistence.SmPreprocessingLogsDao"/>
        </property>
    </bean>
    <bean id="service.PreprocessingHandler" class="de.escidoc.core.sm.service.PreprocessingHandler" scope="prototype">
        <property name="preprocessingHandler">
            <ref bean="business.PreprocessingHandler"/>
        </property>
    </bean>
    <aop:config>
        <aop:pointcut id="business.AggregationDefinitionHandler.create.TransactionPointcut"
                      expression="execution(* de.escidoc.core.sm.business.AggregationDefinitionHandler.create(..))"/>
        <aop:pointcut id="business.AggregationDefinitionHandler.delete.TransactionPointcut"
                      expression="execution(* de.escidoc.core.sm.business.AggregationDefinitionHandler.delete(..))"/>
        <aop:advisor advice-ref="escidoc-core.txAdvice"
                     pointcut-ref="business.AggregationDefinitionHandler.create.TransactionPointcut"/>
        <aop:advisor advice-ref="escidoc-core.txAdvice"
                     pointcut-ref="business.AggregationDefinitionHandler.delete.TransactionPointcut"/>
    </aop:config>
    <bean id="business.AggregationDefinitionHandler" class="de.escidoc.core.sm.business.AggregationDefinitionHandler"
          scope="prototype">
        <property name="dao">
            <ref bean="persistence.SmAggregationDefinitionsDao"/>
        </property>
        <property name="scopesDao">
            <ref bean="persistence.SmScopesDao"/>
        </property>
        <property name="directDatabaseAccessor">
            <ref bean="sm.persistence.DirectDatabaseAccessor"/>
        </property>
        <property name="filterUtility">
            <ref bean="business.sm.FilterUtility"/>
        </property>
        <property name="renderer">
            <ref bean="eSciDoc.core.aa.business.renderer.VelocityXmlAggregationDefinitionRenderer"/>
        </property>
    </bean>
    <bean id="persistence.SmPreprocessingLogsDao"
          class="de.escidoc.core.sm.business.persistence.hibernate.SmPreprocessingLogsHibernateDao">
        <property name="mySessionFactory">
            <ref bean="sm.SessionFactory"/>
        </property>
    </bean>
    <bean id="service.ReportHandler" class="de.escidoc.core.sm.service.ReportHandler" scope="prototype">
        <property name="reportHandler">
            <ref bean="business.ReportHandler"/>
        </property>
    </bean>
    <bean id="service.AggregationDefinitionHandler" class="de.escidoc.core.sm.service.AggregationDefinitionHandler"
          scope="prototype">
        <property name="aggregationDefinitionHandler">
            <ref bean="business.AggregationDefinitionHandler"/>
        </property>
    </bean>
    <bean id="mbean.StatisticPreprocessorService" class="de.escidoc.core.sm.mbean.SpringStatisticPreprocessorService">
        <property name="preprocessor">
            <ref bean="business.StatisticPreprocessor"/>
        </property>
        <property name="errorMessageHandler">
            <ref bean="common.ErrorMessageHandler"/>
        </property>
    </bean>
    <bean id="business.ScopeHandler" class="de.escidoc.core.sm.business.ScopeHandler" scope="prototype">
        <property name="dao">
            <ref bean="persistence.SmScopesDao"/>
        </property>
        <property name="filterUtility">
            <ref bean="business.sm.FilterUtility"/>
        </property>
        <property name="renderer">
            <ref bean="eSciDoc.core.aa.business.renderer.VelocityXmlScopeRenderer"/>
        </property>
    </bean>
    <bean id="eSciDoc.core.aa.business.renderer.VelocityXmlScopeRenderer"
          class="de.escidoc.core.sm.business.renderer.VelocityXmlScopeRenderer"></bean>
    <aop:config>
        <aop:pointcut id="business.AggregationDataSelector.TransactionPointcut"
                      expression="execution(* de.escidoc.core.sm.business.preprocessing.AggregationDataSelector.*(..))"/>
        <aop:advisor advice-ref="escidoc-core.txAdvice"
                     pointcut-ref="business.AggregationDataSelector.TransactionPointcut"/>
    </aop:config>
    <bean id="business.AggregationDataSelector"
          class="de.escidoc.core.sm.business.preprocessing.AggregationDataSelector" scope="prototype">
        <property name="scopesDao">
            <ref bean="persistence.SmScopesDao"/>
        </property>
        <property name="directDatabaseAccessor">
            <ref bean="sm.persistence.DirectDatabaseAccessor"/>
        </property>
    </bean>
    <bean id="persistence.SmAggregationDefinitionsDao"
          class="de.escidoc.core.sm.business.persistence.hibernate.SmAggregationDefinitionsHibernateDao">
        <property name="idProvider">
            <ref bean="escidoc.core.business.EscidocIdProvider"/>
        </property>
        <property name="mySessionFactory">
            <ref bean="sm.SessionFactory"/>
        </property>
    </bean>
    <bean id="mbean.StatisticPreprocessingErrorProcessorService"
          class="de.escidoc.core.sm.mbean.SpringStatisticPreprocessingErrorProcessorService">
        <property name="processor">
            <ref bean="business.ErrorQueueProcessor"/>
        </property>
    </bean>
    <bean id="business.ReportHandler" class="de.escidoc.core.sm.business.ReportHandler" scope="prototype">
        <property name="dao">
            <ref bean="persistence.SmReportDefinitionsDao"/>
        </property>
        <property name="directDatabaseAccessor">
            <ref bean="sm.persistence.DirectDatabaseAccessor"/>
        </property>
        <property name="renderer">
            <ref bean="eSciDoc.core.aa.business.renderer.VelocityXmlReportRenderer"/>
        </property>
    </bean>
    <bean id="sm.SessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="escidoc-core.DataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.transaction.factory_class">
                    org.hibernate.transaction.JTATransactionFactory
                </prop>
                <prop key="hibernate.transaction.manager_lookup_class">
                    ${escidoc-core.hibernate.transaction.manager_lookup_class}
                </prop>
                <prop key="hibernate.dialect">
                    ${escidoc-core.hibernate.dialect}
                </prop>
                <!-- ehCache default provider cannot handle two session factories -->
                <prop key="hibernate.cache.provider_class">
                    org.hibernate.cache.HashtableCacheProvider
                </prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="jta.UserTransaction">${escidoc-core.jta.UserTransaction}</prop>
                <prop key="hibernate.connection.release_mode">auto</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/StatisticData.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/AggregationDefinition.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/AggregationTable.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/AggregationTableIndexe.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/AggregationTableIndexField.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/AggregationTableField.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/AggregationStatisticDataSelector.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/Scope.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/ReportDefinition.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/ReportDefinitionRole.hbm.xml
                </value>
                <value>
                    de/escidoc/core/sm/business/persistence/hibernate/PreprocessingLog.hbm.xml
                </value>
            </list>
        </property>
    </bean>
    <bean id="sm.persistence.DirectDatabaseAccessor" parent="escidoc-core.txProxyTemplate">
        <property name="target">
            <bean class="de.escidoc.core.sm.business.persistence.sql.${escidoc-core.sm.DirectDatabaseAccessor}">
                <property name="myDataSource">
                    <ref bean="escidoc-core.DataSource"/>
                </property>
            </bean>
        </property>
    </bean>
    <!-- cron job with spring -->
    <bean id="escidoc.core.sm.StatisticPreprocessorJob"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="mbean.StatisticPreprocessorService"/>
        </property>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="escidoc.core.sm.StatisticPreprocessorTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="escidoc.core.sm.StatisticPreprocessorJob"/>
        </property>
        <property name="cronExpression" value="0 0 1 * * ?"/>
    </bean>
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="escidoc.core.sm.StatisticPreprocessorTrigger"/>
            </list>
        </property>
    </bean>
</beans>
